                                      ===============================================================
                                               Most Common Ruby Array Methods You Should Know
                                      ===============================================================
===============================================================================================================================================

#(1) .length = The .length method tallies the number of elements in your array and returns the count.

array = [0,1,2,3,4]

array.length         

output => 5

===============================================================================================================================================

#(2) .first = The .first method accesses the first element of the array, the element at index 0

array.first         

output => 0

===============================================================================================================================================

#(3) .last = The .last method accesses the last element of the array

array.last         

output => 4

===============================================================================================================================================

#(4) .take = The .take method returns the first n elements of the array

array.take(3)      

output => [0,1,2]

===============================================================================================================================================

 #(5) .drop = The .drop method returns the elements after n elements of the array

array.drop(3)    

output => [3,4]

==============================================================================================================================================

# (6) array index = You can access a specific element in an array by accessing its index. 
                    If the index does not exist in the array, nil will be returned

array[2]          

output => 2

array[5]

output => nil
 ===============================================================================================================================================

 #(7) .pop = The .pop method will permantently remove the last element of an array

array.pop       

output => [0,1,2,3]

===============================================================================================================================================

#(8) .shift = The .shift method will permantently remove the first element of an array and return this element

array.shift      

output => 0

arry

[1,2,3,4]

===============================================================================================================================================

 #(9) .push = The .push method will allow you to add an element to the end of an array

array.push      

output => [0,1,2,3,4,99]

===============================================================================================================================================

#(10) .unshift = The .unshift method will allow you to add an element to the beginning of an array

array = [2,3]

array.unshift(1)   

output => [1,2,3] 

===============================================================================================================================================

#(11) .delete = The .delete method removes a specified element from an array permanently

array.delete(1)   

output => [0,2,3,4]

===============================================================================================================================================

#(12) .delete_at = The .delete_at method allows you to permanently remove an element of an array at a specified index

array.delete_at(0)  

output => [1,2,3,4] 

===============================================================================================================================================

#(13) .reverse = The .reverse method reverses the array but does not mutate it (the original array stays as is)

array.reverse    

output => [4,3,2,1,0]

array = [1,2,3,4,5,6,7,8,9,10]	

array.select { |number| number > 4 }

output => [5,6,7,8,9,10]

array

=> [5,6,7,8,9,10]

===============================================================================================================================================

#(14) .include? = The include? method checks to see if the argument given is included in the array

array = [1,2,3,4,5]
  
=> [1,2,3,4,5]

arra.include?(3)

=> true

#### .flatten
The flatten method can be used to take an array that contains nested arrays and create a one-dimensional array:

``` ruby

array = [1, 2, [3, 4, 5], [6, 7]]

array.flatten

=> [1, 2, 3, 4, 5, 6, 7] 

===============================================================================================================================================

#(15) .join = The .join method returns a string of all the elements of the array separated by a separator parameter.
              If the separator parameter is nil, the method uses an empty string as a separator between strings.
array.join 

=> "1234"

array.join("*")

=> "1*2*3*4"

===============================================================================================================================================

#(16) .each = The .each method iterates over each element of the array, allowing you to perform actions on them.

array.each do |element|

  puts element

end

=> 
0
1
2
3
4

===============================================================================================================================================

#(17) .map = The .map method is the same as the .collect method. The .map and .collect methods iterate over each 
             element of the array,allowing you to perform actions on them. The .map and .collect methods differ 
             from the .each method in that they return an array containing the transformed elements.

array.map { |element| element * 2 }

  puts element

end

=> 
0
2
4
6
8

==============================================================================================================================================

#(18) .uniq = The .uniq method takes in an array containing duplicate elements, and returns a copy of the array 
              containing only unique elementsâ€”any duplicate elements are removed from the array. 

array = [1, 1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 6, 7, 8]

array.uniq

output => [1, 2, 3, 4, 5, 6, 7, 
 
===============================================================================================================================================

#(19) .concat = The .concat method appends the elements from an array to the original array. The .concat method
                can take in multiple arrays as an argument, which will in turn append multiple arrays to the original array.

array = [0, 1, 2, 3, 4]

array.concat([5, 6, 7], [8, 9, 10])

output => [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

===============================================================================================================================================






























